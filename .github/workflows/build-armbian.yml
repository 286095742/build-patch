#==========================================================================
# Description: Build Armbian
# Copyright (C) 2021 https://github.com/ophub/amlogic-s9xxx-armbian
#==========================================================================

name: Build armbian haitu-rk3588 Rockchip

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      set_release:
        description: "Select OS Release."
        required: false
        default: "jammy"
        type: choice
        options:
          - jammy
          - noble
          - bookworm
      armbian_board:
        description: "Select device board."
        required: false
        default: "haitu-rk3588"
        type: choice
        options:
          - rk3568-luban
          - haitu-rk3588
      armbian_branch:
        description: "Select kernel branch.kernel version."
        required: false
        default: "vendor"
        type: choice
        options:
          - legacy
          - edge
          - vendor
      armbian_desktop:
        description: "Select armbian desktop environment."
        required: false
        default: "false"
        type: choice
        options:
          - false
          - gnome
          - cinnamon
          - xfce
          - i3-wm
          - kde-plasma
          - kde-neon
          - mate
          - xmonad
      armbian_storage:
        description: "Select image storage type."
        required: false
        default: "save"
        type: choice
        options:
          - save
          - temp

env:
  TZ: America/New_York
  ROOTFS_SCRIPT: tools/armbian_rootfs.sh

jobs:
  build:
    runs-on: ubuntu-22.04
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Initialization environment
        id: init
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
          sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android 2>/dev/null
          sudo -E apt-get -y update
          sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
          sudo -E apt-get -y install $(curl -fsSL https://is.gd/depend_ubuntu2204_armbian)
          sudo -E systemctl daemon-reload
          #sudo -E apt-get -y full-upgrade
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo timedatectl set-timezone "${TZ}"
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Download source code
        id: down
        if: ${{ steps.init.outputs.status }} == 'success' && !cancelled()
        run: |
          df -hT ${PWD}
          git clone -q --single-branch --depth=1 --branch=main https://github.com/armbian/build.git build
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Compile Armbian [ ${{ inputs.set_release }} ]
        id: compile
        if: ${{ steps.down.outputs.status }} == 'success' && !cancelled()
        run: |
          # copy patchs to build
          pwd
          ls -lh
          cp armbian_patch/* build/ -rf 
          cd build/
          pwd
          ls -lh
          # Compile method and parameter description: https://docs.armbian.com/Developer-Guide_Build-Options
          if [ ${{ inputs.armbian_desktop }} == 'false' ]; then
                  ./compile.sh build RELEASE=${{ inputs.set_release }} BOARD=${{ inputs.armbian_board }} BRANCH=${{ inputs.armbian_branch }} BUILD_MINIMAL=no HOST=armbian BUILD_DESKTOP=no KERNEL_CONFIGURE=no
          else
                  ./compile.sh RELEASE=${{ inputs.set_release }} BOARD=${{ inputs.armbian_board }} BRANCH=${{ inputs.armbian_branch }} BUILD_MINIMAL=no \
                             DESKTOP_APPGROUPS_SELECTED='browsers desktop_tools multimedia' \
                             DESKTOP_ENVIRONMENT=${{ inputs.armbian_desktop }} DESKTOP_ENVIRONMENT_CONFIG_NAME=config_base \
                             BUILD_ONLY=default HOST=armbian BUILD_DESKTOP=yes EXPERT=yes KERNEL_CONFIGURE=no \
                             COMPRESS_OUTPUTIMAGE="sha" SHARE_LOG=yes
          fi

          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Organize files and clear space
        id: clean
        if: ${{ steps.compile.outputs.status }} == 'success' && !cancelled()
        run: |
          ls -lh
          cd build/
          # Organize and keep essential files, delete unnecessary files
          chmod +x ${ROOTFS_SCRIPT}
          ${ROOTFS_SCRIPT} -v ${{ inputs.set_release }}
          ## zhanghb added. set the builddir build/output/images/
          cd output/images/
          ls -lh
          # Output cleaning result information
          df -hT ${PWD}
          echo "build_tag=Armbian_${{ inputs.set_release }}_${{ inputs.armbian_storage }}_${{ inputs.armbian_desktop }}_$(date +"%Y.%m.%d-%H")" >> ${GITHUB_OUTPUT}
          echo "status=success" >> ${GITHUB_OUTPUT}
          echo "FIRMWARE_PATH=$PWD" >> $GITHUB_ENV

      - name: Upload Armbian image to Release
        uses: ncipollo/release-action@v1
        if: ${{ steps.clean.outputs.status }} == 'success' && !cancelled()
        with:
          allowUpdates: true
          tag: ${{ steps.clean.outputs.build_tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: ${{ env.FIRMWARE_PATH }}/*
          body: |
            **This is OpenWrt Firmware for ${{ env.FIRMWARE_TAG }}**
            ### 🧊 固件版本
            - 固件编译前最后一次➦[主源码](${{ env.REPO_URL }})更新记录
            - ${{ env.VERSION_INFO }}

